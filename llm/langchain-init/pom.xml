<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.von.ms</groupId>
        <artifactId>llm</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>langchain-init</artifactId>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- springboot 整合langchain4j 低阶api -->
        <!--        <dependency>-->
        <!--            <groupId>dev.langchain4j</groupId>-->
        <!--            <artifactId>langchain4j-open-ai-spring-boot-starter</artifactId>-->
        <!--        </dependency>-->
        <!-- springboot 整合langchain4j 高阶 api -->
        <!--        <dependency>-->
        <!--            <groupId>dev.langchain4j</groupId>-->
        <!--            <artifactId>langchain4j-spring-boot-starter</artifactId>-->
        <!--        </dependency>-->
        <!-- langchain4j-open-ai基础-->
        <!-- 所有调用均基于OpenAI协议标准，实现一致的接口设计与规范LangChain4j提供与许多LLM提供商的集成
        从最简单的开始方式是从OpenAI集成开始https://docs.Langchain4j.dev/get-started
        -->
        <dependency>
            <groupId>dev.langchain4j</groupId>
            <artifactId>langchain4j-open-ai</artifactId>
        </dependency>
        <!--  Langchain4j高阶 -->
        <dependency>
            <groupId>dev.langchain4j</groupId>
            <artifactId>langchain4j</artifactId>
        </dependency>
        <!--  Langchain4j-Reactor 实现流式输出 -->
        <dependency>
            <groupId>dev.langchain4j</groupId>
            <artifactId>langchain4j-reactor</artifactId>
        </dependency>
        <!-- MCP Client 依赖-->
        <dependency>
            <groupId>dev.langchain4j</groupId>
            <artifactId>langchain4j-mcp</artifactId>
        </dependency>
        <!-- Qdrant 索引库-->
        <dependency>
            <groupId>dev.langchain4j</groupId>
            <artifactId>langchain4j-qdrant</artifactId>
        </dependency>
        <!--
            Easy RAG 索引库
            https://docs.langchain4j.dev/integrations/vector-stores/easy-rag
        -->
        <dependency>
            <groupId>dev.langchain4j</groupId>
            <artifactId>langchain4j-easy-rag</artifactId>
        </dependency>
        <!--
            DashScope(Qwen)接入阿里云百炼平台
            https://docs.langchain4j.dev/integrations/language-models/dashscope
        -->
        <dependency>
            <groupId>dev.langchain4j</groupId>
            <artifactId>langchain4j-community-dashscope-spring-boot-starter</artifactId>
        </dependency>
        <!--
            redis 索引库
            https://docs.langchain4j.dev/integrations/vector-stores/milvus
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <!--lombok-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <!-- test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

</project>